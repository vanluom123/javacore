# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml
    - name: Upload JAR
      uses: actions/upload-artifact@v2
      with:
        name: artifact
        path: target/JavaCore-1.0-SNAPSHOT.jar
  deploy:
      needs: build
      name: Deploy
      runs-on: ubuntu-latest
      steps:
        - name: Download JAR
          uses: actions/download-artifact@v2
          with:
            name: artifact
        #Deploy the artifact (JAR) into AWS Beanstalk
        - name: Deploy to EB
          uses: einaregilsson/beanstalk-deploy@v13
          with:
            aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            #aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
            use_existing_version_if_available: false
            application_name: Javacore
            environment_name: Javacore-env
            version_label: ${{github.SHA}}
            region: us-east-1
            deployment_package: JavaCore-1.0-SNAPSHOT.jar
